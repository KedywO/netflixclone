{"version":3,"sources":["myaxios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["myaxios","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","useEffect","a","get","request","data","results","fetchData","className","map","movie","src","poster_path","backdrop_path","alt","name","id","original_name","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","setMovie","Math","floor","random","length","console","log","style","backgroundSize","backgroundImage","overview","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f8383a2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n/** base url to make request to the themoviedatabase */\r\n\r\nconst myaxios = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3'\r\n});\r\n\r\n// instance.get('/foo-bar');\r\n// https://api.themoviedb.org/3/foo-bar\r\n\r\nexport default myaxios;","import React, {useState, useEffect} from 'react';\r\nimport myaxios from \"./myaxios\";\r\nimport './Row.css'\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\"\r\n\r\nexport default function Row({title, fetchUrl, isLargeRow}) {\r\n    const [movies, setMovies] = useState([])\r\n\r\n    useEffect(() =>{\r\n        async function fetchData(){\r\n            const request = await myaxios.get(fetchUrl);\r\n            // console.log(request);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n\r\n    },[fetchUrl])\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2 className=\"row-title\">{title}</h2>\r\n            <div className=\"row-posters\">\r\n                {movies.map(movie => (\r\n                    <span className=\"test\">\r\n\r\n                        <img className={isLargeRow ? \"row-posters-posterL\" : \"row-posters-poster\"} key={movie.id} src={`${base_url}${isLargeRow ? movie.poster_path: movie.backdrop_path}`} alt={movie.name} />\r\n                        <p className={isLargeRow ? \"test1L\" : \"test1\"}>{movie.name || movie.original_name || movie.title}</p>\r\n\r\n                        </span>\r\n                ))}\r\n            </div>\r\n\r\n            {/*conteiner -> posters*/}\r\n        </div>\r\n    );\r\n};\r\n\r\n// {`row-posters-poster ${isLargeRow && \"row-posters-posterL\"}`}\r\n","const API_KEY = 'c8773bb1f5bb4e58c934d47f3e71dcbd';\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n};\r\n\r\nexport default requests;","import React, {useState, useEffect} from 'react';\r\nimport myaxios from \"./myaxios\";\r\nimport './Banner.css'\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\"\r\n\r\nexport default function Row({fetchUrl}) {\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await myaxios.get(fetchUrl);\r\n            setMovie(\r\n                request.data.results[\r\n                    Math.floor(Math.random() * request.data.results.length - 1)\r\n                    ]\r\n            );\r\n            // Math.floor(Math.random() * request.data.results.length -1)\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, []);\r\n    console.log(movie);\r\n\r\n    return (\r\n        <div className=\"test\">\r\n        <header className=\"banner\"\r\n        style={{\r\n            backgroundSize: 'cover',\r\n            backgroundImage: `url(\r\n        \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n        )`,}}>\r\n            <span className=\"banner-movie-info\">\r\n                <span className=\"banner-movie-name\">{movie.name}</span>\r\n                <span className=\"buttons-span\">\r\n                <button className=\"banner-button1\">Play</button>\r\n                <button className=\"banner-button2\">Trailer</button>\r\n                </span>\r\n                <span className=\"banner-desc\">{movie.overview}</span>\r\n\r\n            </span>\r\n\r\n\r\n\r\n\r\n        </header>\r\n        </div>\r\n    );\r\n};\r\n\r\n// {`row-posters-poster ${isLargeRow && \"row-posters-posterL\"}`}\r\n","import React, {useState, useEffect} from \"react\";\r\nimport './Nav.css'\r\n\r\nexport default function Nav(){\r\n\r\n    const [show, handleShow] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener(\"scroll\",()=> {\r\n            if(window.scrollY > 50){\r\n                handleShow(true);\r\n            }else handleShow(false);\r\n        });\r\n        return ()=> {\r\n            window.removeEventListener(\"scroll\");\r\n        }\r\n    },[])\r\n    \r\n    return (\r\n        <div className={`nav ${show && \"nav-black\"}`}>\r\n            <img\r\n                className=\"nav-logo\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/250px-Netflix_2015_logo.svg.png\"\r\n                alt=\"Netflix Logo\"\r\n            />\r\n            <img\r\n                className=\"nav-avatar\"\r\n                src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\r\n                alt=\"Netflix Logo\"\r\n            />\r\n            \r\n        </div>        \r\n    )\r\n}","import './App.css';\nimport Row from \"./Row\";\nimport requests from \"./requests\";\nimport Banner from \"./Banner\";\nimport React, {useEffect, useState} from \"react\";\nimport Nav from \"./Nav\";\n\n\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        <Nav />\n        <Banner fetchUrl={requests.fetchNetflixOriginals}/>\n\n        <Row title=\"Netflix originals\" isLargeRow fetchUrl={requests.fetchNetflixOriginals}/>\n        <Row title=\"Trending now\" fetchUrl={requests.fetchTrending}/>\n        <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n        <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n        <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n        <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n        <Row title=\"RomanceMovies\" fetchUrl={requests.fetchRomanceMovies}/>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}